name: tests

on:
  push:
    branches:
      - "**"
    tags:
      - "!**"
  workflow_call:

jobs:
  Tests:
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        # TODO: re-enable 3.11
        PYTHON_VERSION: ["3.12", "3.13"]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.PYTHON_VERSION }}

      - name: Install Linux build prerequisites
        if:   runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -q --no-install-recommends --no-install-suggests libbz2-dev libcurl4-openssl-dev liblzma-dev libssl-dev libdeflate-dev

      - name: Update macOS build prerequisites
        if:   runner.os == 'macOS'
        run: |
          brew unlink xz || true  # Remove brewed liblzma as it is not multiarch

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: Set up miniconda
        uses: conda-incubator/setup-miniconda@v3
        with:
          miniforge-version: latest
          channels: bioconda,conda-forge
          activate-environment: prymer
          environment-file: prymer.yml
          channel-priority: true
          auto-update-conda: true
          auto-activate-base: false
          python-version: ${{ matrix.PYTHON_VERSION }}

      - name: Check that the lock file is up to date
        run: uv lock --check

      - name: Install dependencies
        run: uv sync  --no-install-project

      - name: Install project
        run: uv pip install --group dev --group docs

      - name: Style checking
        run: uv run ruff format --check prymer tests

      - name: Run lint
        run: uv run ruff check prymer tests

      - name: Run mypy
        run: uv run mypy prymer tests --config=pyproject.toml

      - name: Run pytest
        run: uv run pytest --cov=prymer --cov-report=xml --cov-branch 

# Disabling build of docs on dev until we're done with refactoring
#      - name: Run docs
#        shell: bash -el {0}
#        run: |
#          set -euo pipefail
#          uv run mkdocs build --strict

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4.5.0
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
